const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/eth_getTransactionCount-CicAXAsb.js","assets/main-CBGfwRJF.js","assets/wScoge-BthgsBuw.js","assets/wScoge-CUf-lIoi.css","assets/main-CU5_KOYG.css"])))=>i.map(i=>d[i]);
import{bC as d,bD as h,bj as w,bo as y,bs as z,bE as X,bF as E,bl as S,by as G,bG as P,be as x,bH as Z,bI as W,bJ as j,bK as ee}from"./main-CBGfwRJF.js";import{a as te}from"./types-DlKe2M91.js";import{r as ne}from"./random-CGsbzoB4.js";import{e as H}from"./eth_sendRawTransaction-DPdnXbFR.js";import{s as I}from"./sleep-mAKpSMLY.js";import"./wScoge-BthgsBuw.js";const ie="/sdk/2022-08-12/embedded-wallet",k=n=>`thirdwebEwsWalletUserId-${n}`,ae="walletToken",v=n=>`${ae}-${n}`,D=n=>`passkey-credential-id-${n}`,re="a",A=(n,e)=>`${re}-${n}-${e}`,U=n=>`walletConnectSessions-${n}`,F=n=>`thirdweb_guest_session_id_${n}`,N=new Map;class O{constructor({storage:e,clientId:t,ecosystem:i}){Object.defineProperty(this,"key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.storage=e,this.key=se(t,i==null?void 0:i.id),this.ecosystem=i}async getItem(e){return this.storage?this.storage.getItem(e):N.get(e)??null}async setItem(e,t){if(this.storage)return this.storage.setItem(e,t);N.set(e,t)}async removeItem(e){const t=await this.getItem(e);return this.storage&&t?(this.storage.removeItem(e),!0):!1}async getWalletConnectSessions(){return this.getItem(U(this.key))}async saveWalletConnectSessions(e){await this.setItem(U(this.key),e)}async savePasskeyCredentialId(e){await this.setItem(D(this.key),e)}async getPasskeyCredentialId(){return this.getItem(D(this.key))}async saveAuthCookie(e){await this.setItem(v(this.key),e)}async getAuthCookie(){return this.getItem(v(this.key))}async removeAuthCookie(){return this.removeItem(v(this.key))}async saveDeviceShare(e,t){await this.saveWalletUserId(t),await this.setItem(A(this.key,t),e)}async getDeviceShare(){const e=await this.getWalletUserId();return e?this.getItem(A(this.key,e)):null}async removeDeviceShare(){const e=await this.getWalletUserId();return e?this.removeItem(A(this.key,e)):!1}async getWalletUserId(){return this.getItem(k(this.key))}async saveWalletUserId(e){await this.setItem(k(this.key),e)}async removeWalletUserId(){return this.removeItem(k(this.key))}async getGuestSessionId(){return this.getItem(F(this.key))}async saveGuestSessionId(e){await this.setItem(F(this.key),e)}}const se=(n,e)=>`${n}${e?`-${e}`:""}`,T=new Map,oe={getItem:async n=>T.get(n)??null,setItem:async(n,e)=>{T.set(n,e)},removeItem:async n=>{T.delete(n)}};async function C({authToken:n,client:e,ecosystem:t}){const s=await d(e,t)(`${h("inAppWallet")}/api/2024-05-05/accounts`,{method:"GET",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${n}`}});if(!s.ok){const o=await s.text().catch(()=>"Unknown error");throw new Error(`Failed to get user info: ${o}`)}return await s.json()}const ce=h("inAppWallet"),le=`${ce}/`,q=`${le}api/2023-10-20`,ue=`${q}/embedded-wallet/validate-custom-jwt`,de=`${q}/embedded-wallet/validate-custom-auth-endpoint`,Q=(n,e)=>e instanceof Error?`${n}: ${e.message}`:`${n}: ${w(e)}`;async function he(n){const t=await d(n.client,n.ecosystem)(de,{method:"POST",headers:{"Content-Type":"application/json"},body:w({payload:n.payload,developerClientId:n.client.clientId})});if(!t.ok){const i=await t.json();throw new Error(`Custom auth endpoint authentication error: ${i.message}`)}try{const{verifiedToken:i}=await t.json();return{storedToken:i}}catch(i){throw new Error(Q("Malformed response from post auth_endpoint authentication",i))}}const V=n=>{if(!te.includes(n))throw new Error(`Unknown auth option ${n}`);switch(n){case"wallet":return"siwe";default:return n}},b=({authOption:n,client:e,ecosystem:t,mode:i="popup",redirectUrl:s})=>{if(i==="popup"&&s)throw new Error("Redirect URL is not supported for popup mode");if(i==="window"&&!s)throw new Error("Redirect URL is required for window mode");const o=V(n);let a=`${h("inAppWallet")}/api/2024-05-05/login/${o}?clientId=${e.clientId}`;if(t!=null&&t.partnerId?a=`${a}&ecosystemId=${t.id}&ecosystemPartnerId=${t.partnerId}`:t&&(a=`${a}&ecosystemId=${t.id}`),i!=="popup"){const r=new URL(s||window.location.href);r.searchParams.set("walletId",(t==null?void 0:t.id)||"inApp"),r.searchParams.set("authProvider",n),a=`${a}&redirectUrl=${encodeURIComponent(r.toString())}`}return a},_=({authOption:n,client:e,ecosystem:t})=>{const i=V(n);let s=`${h("inAppWallet")}/api/2024-05-05/login/${i}/callback?clientId=${e.clientId}`;return t!=null&&t.partnerId?s=`${s}&ecosystemId=${t.id}&ecosystemPartnerId=${t.partnerId}`:t&&(s=`${s}&ecosystemId=${t.id}`),s};async function we(n){const e=d(n.client,n.ecosystem),t=b({authOption:"backend",client:n.client,ecosystem:n.ecosystem}),i=await e(`${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({walletSecret:n.walletSecret})});if(!i.ok)throw new Error("Failed to generate backend account");return await i.json()}async function ge(n){const e=new O({storage:n.storage,clientId:n.client.clientId,ecosystem:n.ecosystem});let t=await e.getGuestSessionId();t||(t=ne(32),e.saveGuestSessionId(t));const i=d(n.client,n.ecosystem),s=_({authOption:"guest",client:n.client,ecosystem:n.ecosystem}),o=await i(`${s}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({sessionId:t})});if(!o.ok)throw new Error("Failed to generate guest account");return await o.json()}async function pe(n){const t=await d(n.client,n.ecosystem)(ue,{method:"POST",headers:{"Content-Type":"application/json"},body:w({jwt:n.jwt,developerClientId:n.client.clientId})});if(!t.ok){const i=await t.json();throw new Error(`JWT authentication error: ${i.message}`)}try{const{verifiedToken:i}=await t.json();return{storedToken:i}}catch(i){throw new Error(Q("Malformed response from post jwt authentication",i))}}async function me({client:n,ecosystem:e,tokenToLink:t,storage:i}){const s=d(n,e),o=h("inAppWallet"),a=await i.getAuthCookie();if(!a)throw new Error("Failed to link account, no user logged in");const r={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},c=await s(`${o}/api/2024-05-05/account/connect`,{method:"POST",headers:r,body:w({accountAuthTokenToConnect:t})});if(!c.ok){const u=await c.json();throw new Error(u.message||"Failed to link account.")}const{linkedAccounts:l}=await c.json();return l??[]}async function fe({client:n,ecosystem:e,profileToUnlink:t,storage:i}){const s=d(n,e),o=h("inAppWallet"),a=await i.getAuthCookie();if(!a)throw new Error("Failed to unlink account, no user logged in");const r={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},c=await s(`${o}/api/2024-05-05/account/disconnect`,{method:"POST",headers:r,body:w(t)});if(!c.ok){const u=await c.json();throw new Error(u.message||"Failed to unlink account.")}const{linkedAccounts:l}=await c.json();return l??[]}async function ye({client:n,ecosystem:e,storage:t}){const i=d(n,e),s=h("inAppWallet"),o=await t.getAuthCookie();if(!o)throw new Error("Failed to get linked accounts, no user logged in");const a={Authorization:`Bearer iaw-auth-token:${o}`,"Content-Type":"application/json"},r=await i(`${s}/api/2024-05-05/accounts`,{method:"GET",headers:a});if(!r.ok){const l=await r.json();throw new Error(l.message||"Failed to get linked accounts.")}const{linkedAccounts:c}=await r.json();return c??[]}function J(){return`${h("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function K(n,e){return`${h("inAppWallet")}/api/2024-05-05/login/passkey?type=${n}${e?`&username=${e}`:""}`}async function be(n){var u,g,p;if(!n.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=d(n.client,n.ecosystem),t=n.username??ke(n.ecosystem),s=await(await e(K("sign-up",t))).json();if(!s.challenge)throw new Error("No challenge received");const o=s.challenge,a=await n.passkeyClient.register({name:t,challenge:o,rp:n.rp}),r={};(u=n.ecosystem)!=null&&u.partnerId&&(r["x-ecosystem-partner-id"]=n.ecosystem.partnerId),(g=n.ecosystem)!=null&&g.id&&(r["x-ecosystem-id"]=n.ecosystem.id);const l=await(await e(J(),{method:"POST",headers:{"Content-Type":"application/json",...r},body:w({type:"sign-up",authenticatorData:a.authenticatorData,credentialId:a.credentialId,serverVerificationId:s.serverVerificationId,clientData:a.clientData,username:t,credential:{publicKey:a.credential.publicKey,algorithm:a.credential.algorithm},origin:a.origin,rpId:n.rp.id})})).json();if(!l||!l.storedToken)throw new Error(`Error verifying passkey: ${l.message??"unknown error"}`);return await((p=n.storage)==null?void 0:p.savePasskeyCredentialId(a.credentialId)),l}async function Ie(n){var l,u,g,p;if(!n.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=d(n.client,n.ecosystem),[t,i]=await Promise.all([e(K("sign-in")).then(f=>f.json()),(l=n.storage)==null?void 0:l.getPasskeyCredentialId()]);if(!t.challenge)throw new Error("No challenge received");const s=t.challenge,o=await n.passkeyClient.authenticate({credentialId:i??void 0,challenge:s,rp:n.rp}),a={};(u=n.ecosystem)!=null&&u.partnerId&&(a["x-ecosystem-partner-id"]=n.ecosystem.partnerId),(g=n.ecosystem)!=null&&g.id&&(a["x-ecosystem-id"]=n.ecosystem.id);const c=await(await e(J(),{method:"POST",headers:{"Content-Type":"application/json",...a},body:w({type:"sign-in",authenticatorData:o.authenticatorData,credentialId:o.credentialId,serverVerificationId:t.serverVerificationId,clientData:o.clientData,signature:o.signature,origin:o.origin,rpId:n.rp.id})})).json();if(!c||!c.storedToken)throw new Error(`Error verifying passkey: ${c.message??"unknown error"}`);return await((p=n.storage)==null?void 0:p.savePasskeyCredentialId(o.credentialId)),c}function ke(n){return`${(n==null?void 0:n.id)??"wallet"}-${new Date().toISOString()}`}function ve(n){let i=[`${n.domain} wants you to sign in with your Ethereum account:`,n.address].join(`
`);i=[i,n.statement].join(`

`),n.statement&&(i+=`
`);const s=[];if(n.uri){const u=`URI: ${n.uri}`;s.push(u)}const o=`Version: ${n.version}`;if(s.push(o),n.chain_id){const u=`Chain ID: ${n.chain_id}`||"1";s.push(u)}const a=`Nonce: ${n.nonce}`;s.push(a);const r=`Issued At: ${n.issued_at}`;s.push(r);const c=`Expiration Time: ${n.expiration_time}`;if(s.push(c),n.invalid_before){const u=`Not Before: ${n.invalid_before}`;s.push(u)}n.resources&&s.push(["Resources:",...n.resources.map(u=>`- ${u}`)].join(`
`));const l=s.join(`
`);return[i,l].join(`
`)}async function Ae(n){const{payload:e,account:t}=n;return{signature:await t.signMessage({message:ve(e)}),payload:e}}async function Te(n){const{wallet:e,chain:t,client:i,ecosystem:s}=n,o=e.getAccount()||await e.connect({client:i,chain:t}),a=d(i,s),r=await(async()=>{const u=b({authOption:"wallet",client:n.client,ecosystem:n.ecosystem}),g=await a(`${u}&address=${o.address}&chainId=${t.id}`);if(!g.ok)throw new Error("Failed to generate SIWE login payload");return await g.json()})(),{signature:c}=await Ae({payload:r,account:o});return await(async()=>{const u=_({authOption:"wallet",client:n.client,ecosystem:n.ecosystem}),g=await a(`${u}&signature=${c}&payload=${encodeURIComponent(r)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({signature:c,payload:r})});if(!g.ok)throw new Error("Failed to verify SIWE signature");return await g.json()})()}async function Le({client:n,payload:e,storage:t}){const i=await t.getAuthCookie(),s=t.ecosystem,o=d(n,s);if(!i)throw new Error("No auth token found when signing message");const a={address:e.address,chainId:e.chainId,nonce:Number(e.nonce)},r=await o(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-authorization`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${i}`},body:w(a)});if(!r.ok)throw new Error(`Failed to sign message - ${r.status} ${r.statusText}`);return await r.json()}async function Ee({client:n,payload:{message:e,isRaw:t,originalMessage:i,chainId:s},storage:o}){const a=await o.getAuthCookie(),r=o.ecosystem,c=d(n,r);if(!a)throw new Error("No auth token found when signing message");const l=await c(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${a}`},body:w({messagePayload:{message:e,isRaw:t,originalMessage:i,chainId:s}})});if(!l.ok)throw new Error(`Failed to sign message - ${l.status} ${l.statusText}`);return await l.json()}async function Se({client:n,payload:e,storage:t}){const i=await t.getAuthCookie(),s=t.ecosystem,o=d(n,s);if(!i)throw new Error("No auth token found when signing transaction");const a=await o(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${i}`},body:w({transactionPayload:e})});if(!a.ok)throw new Error(`Failed to sign transaction - ${a.status} ${a.statusText}`);return(await a.json()).signature}async function Pe({client:n,payload:e,storage:t}){const i=await t.getAuthCookie(),s=t.ecosystem,o=d(n,s);if(!i)throw new Error("No auth token found when signing typed data");const a=await o(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${i}`},body:w({...e})});if(!a.ok)throw new Error(`Failed to sign typed data - ${a.status} ${a.statusText}`);return await a.json()}class We{constructor({client:e,ecosystem:t,address:i,storage:s}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.address=i,this.localStorage=s}async postWalletSetUp(e){await this.localStorage.saveAuthCookie(e.storedToken.cookieString)}async getUserWalletStatus(){var o,a;const e=await this.localStorage.getAuthCookie();if(!e)return{status:"Logged Out"};const t=await C({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!t)return{status:"Logged Out"};const i=t.wallets[0],s={email:(o=t.linkedAccounts.find(r=>r.details.email!==void 0))==null?void 0:o.details.email,phoneNumber:(a=t.linkedAccounts.find(r=>r.details.phone!==void 0))==null?void 0:a.details.phone,userWalletId:t.id||"",recoveryShareManagement:"ENCLAVE"};return i?{status:"Logged In, Wallet Initialized",walletAddress:i.address,authDetails:s,account:await this.getAccount()}:{status:"Logged In, Wallet Uninitialized",authDetails:s}}async getAccount(){const e=this.client,t=this.localStorage,i=this.address,s=this.ecosystem,o=async a=>{const r=E({client:e,chain:S(a.chainId)}),c={to:a.to?y(a.to):void 0,data:a.data,value:m(a.value),gas:m(a.gas),nonce:m(a.nonce)||P(await x(async()=>{const{eth_getTransactionCount:l}=await import("./eth_getTransactionCount-CicAXAsb.js");return{eth_getTransactionCount:l}},__vite__mapDeps([0,1,2,3,4])).then(({eth_getTransactionCount:l})=>l(r,{address:y(this.address),blockTag:"pending"}))),chainId:P(a.chainId)};return a.authorizationList&&a.authorizationList.length>0?(c.type=4,c.authorizationList=a.authorizationList,c.maxFeePerGas=m(a.maxFeePerGas),c.maxPriorityFeePerGas=m(a.maxPriorityFeePerGas)):m(a.maxFeePerGas)?(c.maxFeePerGas=m(a.maxFeePerGas),c.maxPriorityFeePerGas=m(a.maxPriorityFeePerGas),c.type=2):(c.gasPrice=m(a.gasPrice),c.type=0),Se({client:e,storage:t,payload:c})};return{address:y(i),async signTransaction(a){if(!a.chainId)throw new Error("chainId required in tx to sign");return o({chainId:a.chainId,...a})},async sendTransaction(a){const r=E({client:e,chain:S(a.chainId)}),c=await o(a),l=await H(r,c);return G({client:e,ecosystem:s,chainId:a.chainId,walletAddress:i,walletType:"inApp",transactionHash:l,contractAddress:a.to??void 0,gasPrice:a.gasPrice}),{transactionHash:l}},async signMessage({message:a,originalMessage:r,chainId:c}){const l=typeof a=="string"?{message:a,isRaw:!1,originalMessage:r,chainId:c}:{message:typeof a.raw=="string"?a.raw:X(a.raw),isRaw:!0,originalMessage:r,chainId:c},{signature:u}=await Ee({client:e,payload:l,storage:t});return u},async signTypedData(a){const r=z(a),{signature:c}=await Pe({client:e,payload:r,storage:t});return c},async signAuthorization(a){const r=await Le({client:e,payload:a,storage:t});return{address:y(r.address),chainId:Number.parseInt(r.chainId),nonce:BigInt(r.nonce),r:BigInt(r.r),s:BigInt(r.s),yParity:Number.parseInt(r.yParity)}}}}}function m(n){return n===void 0||Z(n)?n:P(n)}const Oe={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none",pointerEvents:"all"},L=new Map;class Ce{constructor({link:e,baseUrl:t,iframeId:i,container:s,onIframeInitialize:o,localStorage:a,clientId:r,ecosystem:c}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=a,this.clientId=r,this.ecosystem=c,this.iframeBaseUrl=t,typeof document>"u")return;s=s??document.body;let l=document.getElementById(i);const u=new URL(e);if(!l||l.src!==u.href){l=document.createElement("iframe");const g={...Oe};Object.assign(l.style,g),l.setAttribute("id",i),l.setAttribute("fetchpriority","high"),s.appendChild(l),l.src=u.href;const p=f=>{if(f.data.eventType==="ewsIframeLoaded"){if(window.removeEventListener("message",p),!l){console.warn("thirdweb iFrame not found");return}this.onIframeLoadHandler(l,o)()}};window.addEventListener("message",p)}this.iframe=l}async onIframeLoadedInitVariables(){var e,t;return{authCookie:await this.localStorage.getAuthCookie(),deviceShareStored:await this.localStorage.getDeviceShare(),walletUserId:await this.localStorage.getWalletUserId(),clientId:this.clientId,partnerId:(e=this.ecosystem)==null?void 0:e.partnerId,ecosystemId:(t=this.ecosystem)==null?void 0:t.id}}onIframeLoadHandler(e,t){return async()=>{var o;const i=new MessageChannel,s=new Promise((a,r)=>{i.port1.onmessage=c=>{const{data:l}=c;i.port1.close(),l.success||r(new Error(l.error)),L.set(e.src,!0),t&&t(),a(!0)}});(o=e==null?void 0:e.contentWindow)==null||o.postMessage({eventType:"initIframe",data:await this.onIframeLoadedInitVariables()},this.iframeBaseUrl,[i.port2]),await s}}async call({procedureName:e,params:t,showIframe:i=!1}){var a;if(!this.iframe)throw new Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!L.get(this.iframe.src);)await I(this.POLLING_INTERVAL_SECONDS*1e3);i&&(this.iframe.style.display="block",await I(.005*1e3));const s=new MessageChannel,o=new Promise((r,c)=>{s.port1.onmessage=async l=>{const{data:u}=l;s.port1.close(),i&&(await I(.1*1e3),this.iframe&&(this.iframe.style.display="none")),u.success?r(u.data):c(new Error(u.error))}});return(a=this.iframe.contentWindow)==null||a.postMessage({eventType:e,data:{...t,...await this.onIframeLoadedInitVariables()}},this.iframeBaseUrl,[s.port2]),o}destroy(){this.iframe&&L.delete(this.iframe.src)}}class _e extends Ce{constructor({clientId:e,baseUrl:t,ecosystem:i}){super({iframeId:je+((i==null?void 0:i.id)||""),link:$e({clientId:e,path:ie,ecosystem:i,baseUrl:t}).href,baseUrl:t,container:typeof document>"u"?void 0:document.body,localStorage:new O({storage:W,clientId:e,ecosystem:i}),clientId:e,ecosystem:i}),this.clientId=e,this.ecosystem=i}}function $e({clientId:n,baseUrl:e,path:t,ecosystem:i,queryParams:s}){var a;const o=new URL(`${t}`,e);if(s)for(const r of Object.keys(s))o.searchParams.set(r,((a=s[r])==null?void 0:a.toString())||"");return o.searchParams.set("clientId",n),(i==null?void 0:i.partnerId)!==void 0&&o.searchParams.set("partnerId",i.partnerId),(i==null?void 0:i.id)!==void 0&&o.searchParams.set("ecosystemId",i.id),o}const je="thirdweb-in-app-wallet-iframe";async function De({client:n,ecosystem:e,authToken:t}){const s=await d(n,e)(`${h("inAppWallet")}/api/v1/enclave-wallet/generate`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":n.clientId,Authorization:`Bearer embedded-wallet-token:${t}`}});if(!s.ok)throw new Error(`Failed to generate wallet - ${s.status} ${s.statusText}`);const{wallet:o}=await s.json();return o}class Ue{constructor({baseUrl:e,querier:t,preLogin:i,postLogin:s,client:o,ecosystem:a}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=e,this.LoginQuerier=t,this.preLogin=i,this.postLogin=s,this.client=o,this.ecosystem=a}async sendEmailLoginOtp({email:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebEmailLoginOtp",params:{email:e}})}async sendSmsLoginOtp({phoneNumber:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebSmsLoginOtp",params:{phoneNumber:e}})}}class Fe extends Ue{async authenticateWithModal(){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:void 0,showIframe:!0})}async loginWithModal(){await this.preLogin();const e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe({email:e}){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:{email:e},showIframe:!0})}async loginWithIframe({email:e}){await this.preLogin();const t=await this.authenticateWithIframe({email:e});return this.postLogin(t)}async authenticateWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({procedureName:"loginWithCustomJwt",params:{encryptionKey:e,jwt:t}})}async loginWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");await this.preLogin();const i=await this.authenticateWithCustomJwt({encryptionKey:e,jwt:t});return this.postLogin(i)}async authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t}){return this.LoginQuerier.call({procedureName:"loginWithCustomAuthEndpoint",params:{encryptionKey:e,payload:t}})}async loginWithCustomAuthEndpoint({encryptionKey:e,payload:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom auth");await this.preLogin();const i=await this.authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t});return this.postLogin(i)}async authenticateWithEmailOtp({email:e,otp:t,recoveryCode:i}){return this.LoginQuerier.call({procedureName:"verifyThirdwebEmailLoginOtp",params:{email:e,otp:t,recoveryCode:i}})}async loginWithEmailOtp({email:e,otp:t,recoveryCode:i}){const s=await this.authenticateWithEmailOtp({email:e,otp:t,recoveryCode:i});return this.postLogin(s)}async authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:i}){return this.LoginQuerier.call({procedureName:"verifyThirdwebSmsLoginOtp",params:{phoneNumber:e,otp:t,recoveryCode:i}})}async loginWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:i}){const s=await this.authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:i});return this.postLogin(s)}}class Ne{constructor({client:e,querier:t,onAuthSuccess:i,ecosystem:s,baseUrl:o,localStorage:a}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=s,this.AuthQuerier=t,this.localStorage=a,this.onAuthSuccess=i,this.BaseLogin=new Fe({postLogin:async r=>this.postLogin(r),preLogin:async()=>{await this.preLogin()},ecosystem:s,querier:t,client:e,baseUrl:o})}async preLogin(){await this.logout()}async postLogin({storedToken:e,walletDetails:t}){return e.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(e.cookieString),await this.onAuthSuccess({storedToken:e,walletDetails:t})}async loginWithAuthToken(e,t){var o;e.storedToken.authProvider!=="Backend"&&await this.preLogin();const i=await C({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!i)throw new Error("Cannot login, no user found for auth token");if(i.wallets.length>0&&((o=i.wallets[0])==null?void 0:o.type)==="enclave")return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:i.wallets[0].address}});if(i.wallets.length===0){const a=await De({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.address}})}const s=await this.AuthQuerier.call({procedureName:"loginWithStoredTokenDetails",params:{storedToken:e.storedToken,recoveryCode:t}});return this.postLogin(s)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp({email:e}){return this.BaseLogin.sendEmailLoginOtp({email:e})}async sendSmsLoginOtp({phoneNumber:e}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:e})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){const e=await this.localStorage.removeAuthCookie(),t=await this.localStorage.removeWalletUserId();return{success:e||t}}}const Re="width=350, height=500",R=({isWindowOpenedByFn:n,win:e,closeOpenedWindow:t})=>{n?e==null||e.close():e&&t?t(e):e&&e.close()};async function Be(n){const e=b({...n,mode:n.mode||"redirect"});n.mode==="redirect"?window.location.href=e:window.open(e),await new Promise(t=>setTimeout(t,5e3))}const Me=async n=>{let e=n.openedWindow,t=!1;if(e||(e=window.open(b({...n,mode:"popup"}),`Login to ${n.authOption}`,Re),t=!0),!e)throw new Error("Something went wrong opening pop-up");return await new Promise((s,o)=>{const a=window.setInterval(async()=>{e.closed&&(clearInterval(a),window.removeEventListener("message",r),o(new Error("User closed login window")))},1e3),r=async c=>{if(c.origin===h("inAppWallet")){if(typeof c.data!="object"){o(new Error("Invalid event data"));return}switch(c.data.eventType){case"oauthSuccessResult":{window.removeEventListener("message",r),clearInterval(a),R({isWindowOpenedByFn:t,win:e,closeOpenedWindow:n.closeOpenedWindow}),c.data.authResult&&s(c.data.authResult);break}case"oauthFailureResult":{window.removeEventListener("message",r),clearInterval(a),R({isWindowOpenedByFn:t,win:e,closeOpenedWindow:n.closeOpenedWindow}),o(new Error(c.data.errorString));break}}}};window.addEventListener("message",r)})},ze=async n=>{const{client:e,ecosystem:t}=n,i=b({client:e,ecosystem:t,authOption:n.strategy}),s={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(s["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(s["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(n.strategy){case"email":return{email:n.email};case"phone":return{phone:n.phoneNumber}}})(),a=await fetch(i,{method:"POST",headers:s,body:w(o)});if(!a.ok)throw new Error("Failed to send verification code");return await a.json()},B=async n=>{const{client:e,ecosystem:t}=n,i=_({authOption:n.strategy,client:n.client,ecosystem:n.ecosystem}),s={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(s["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(s["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(n.strategy){case"email":return{email:n.email,code:n.verificationCode};case"phone":return{phone:n.phoneNumber,code:n.verificationCode}}})(),a=await fetch(i,{method:"POST",headers:s,body:w(o)});if(!a.ok)throw new Error("Failed to verify verification code");return await a.json()};class M{constructor({client:e,ecosystem:t,querier:i,localStorage:s}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.walletManagerQuerier=i,this.localStorage=s}async postWalletSetUp(e){e.deviceShareStored&&await this.localStorage.saveDeviceShare(e.deviceShareStored,e.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){const e=await this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return e.status==="Logged In, Wallet Initialized"?{status:"Logged In, Wallet Initialized",...e.user,account:await this.getAccount()}:e.status==="Logged In, New Device"?{status:"Logged In, New Device",...e.user}:e.status==="Logged In, Wallet Uninitialized"?{status:"Logged In, Wallet Uninitialized",...e.user}:{status:e.status}}async getAccount(){var a;const e=this.walletManagerQuerier,t=this.client,i=(a=this.ecosystem)==null?void 0:a.partnerId,{address:s}=await e.call({procedureName:"getAddress",params:void 0}),o=async r=>{const c={to:r.to??void 0,data:r.data,value:r.value,gasLimit:r.gas,nonce:r.nonce,chainId:r.chainId};r.maxFeePerGas?(c.accessList=r.accessList,c.maxFeePerGas=r.maxFeePerGas,c.maxPriorityFeePerGas=r.maxPriorityFeePerGas,c.type=2):(c.gasPrice=r.gasPrice,c.type=0);const l=j().rpc,{signedTransaction:u}=await e.call({procedureName:"signTransaction",params:{transaction:c,chainId:r.chainId,partnerId:i,rpcEndpoint:`https://${r.chainId}.${l}`}});return u};return{address:y(s),async signTransaction(r){if(!r.chainId)throw new Error("chainId required in tx to sign");return o({...r,chainId:r.chainId})},async sendTransaction(r){const c=E({client:t,chain:S(r.chainId)}),l=await o(r),u=await H(c,l);return G({client:t,chainId:r.chainId,walletAddress:s,walletType:"inApp",transactionHash:u,contractAddress:r.to??void 0,gasPrice:r.gasPrice}),{transactionHash:u}},async signMessage({message:r}){const c=typeof r=="string"?r:r.raw instanceof Uint8Array?r.raw:ee(r.raw),{signedMessage:l}=await e.call({procedureName:"signMessage",params:{message:c,partnerId:i,chainId:1}});return l},async signTypedData(r){var $;const c=z(r);($=c.types)!=null&&$.EIP712Domain&&(c.types.EIP712Domain=void 0);const l=c.domain,u=l==null?void 0:l.chainId,p={...l!=null&&l.verifyingContract?{verifyingContract:l==null?void 0:l.verifyingContract}:{},name:l==null?void 0:l.name,version:l==null?void 0:l.version};u&&(p.chainId=u);const f=j().rpc,{signedTypedData:Y}=await e.call({procedureName:"signTypedDataV4",params:{domain:p,types:c.types,message:c.message,chainId:Number.parseInt(BigInt(u||1).toString()),partnerId:i,rpcEndpoint:`https://${u}.${f}`}});return Y}}}}class Ye{isClientIdLegacyPaper(e){return e.indexOf("-")>0&&e.length===36}constructor({client:e,onAuthSuccess:t,ecosystem:i,passkeyDomain:s,storage:o}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(e.clientId))throw new Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");const a=h("inAppWallet");this.client=e,this.ecosystem=i,this.passkeyDomain=s,this.storage=new O({storage:o??xe(),clientId:e.clientId,ecosystem:i}),this.querier=new _e({clientId:e.clientId,ecosystem:i,baseUrl:a}),this.auth=new Ne({client:e,querier:this.querier,baseUrl:a,localStorage:this.storage,ecosystem:i,onAuthSuccess:async r=>{if(t==null||t(r),r.storedToken.authDetails.walletType==="sharded"&&(await this.querier.call({procedureName:"migrateFromShardToEnclave",params:{storedToken:r.storedToken}})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(r.storedToken.cookieString),!this.wallet)throw new Error("Failed to initialize wallet");const c="deviceShareStored"in r.walletDetails?r.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({storedToken:r.storedToken,deviceShareStored:c}),this.wallet instanceof M&&await this.querier.call({procedureName:"initIframe",params:{partnerId:i==null?void 0:i.partnerId,ecosystemId:i==null?void 0:i.id,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in r.walletDetails?r.walletDetails.deviceShareStored:null,walletUserId:r.storedToken.authDetails.userWalletId,authCookie:r.storedToken.cookieString}}),{user:{status:"Logged In, Wallet Initialized",authDetails:r.storedToken.authDetails,account:await this.wallet.getAccount(),walletAddress:r.walletDetails.walletAddress}}}})}async initializeWallet(e){var s;const t=await this.storage.getAuthCookie();if(!e&&t===null)throw new Error("No auth token provided and no stored auth token found to initialize the wallet");const i=await C({authToken:e||t,client:this.client,ecosystem:this.ecosystem});if(!i)throw new Error("Cannot initialize wallet, no user logged in");if(i.wallets.length===0)throw new Error("Cannot initialize wallet, this user does not have a wallet generated yet");return((s=i.wallets[0])==null?void 0:s.type)==="enclave"?new We({client:this.client,ecosystem:this.ecosystem,address:i.wallets[0].address,storage:this.storage}):new M({client:this.client,ecosystem:this.ecosystem,querier:this.querier,localStorage:this.storage})}async getUser(){if(!this.wallet){const e=await this.storage.getAuthCookie();if(!e)return{status:"Logged Out"};this.wallet=await this.initializeWallet(e)}if(!this.wallet)throw new Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw new Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return ze({...e,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(e,t,i){return Be({authOption:e,client:this.client,ecosystem:this.ecosystem,redirectUrl:i,mode:t})}async loginWithAuthToken(e,t){return this.auth.loginWithAuthToken(e,t)}async authenticate(e){const t=e.strategy;switch(t){case"email":return B({...e,client:this.client,ecosystem:this.ecosystem});case"phone":return B({...e,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return he({payload:e.payload,client:this.client,ecosystem:this.ecosystem});case"jwt":return pe({jwt:e.jwt,client:this.client,ecosystem:this.ecosystem});case"passkey":return this.passkeyAuth(e);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"steam":case"coinbase":case"discord":return Me({authOption:t,client:this.client,ecosystem:this.ecosystem,closeOpenedWindow:e.closeOpenedWindow,openedWindow:e.openedWindow});case"guest":return ge({client:this.client,ecosystem:this.ecosystem,storage:W});case"backend":return we({client:this.client,walletSecret:e.walletSecret,ecosystem:this.ecosystem});case"wallet":return Te({ecosystem:this.ecosystem,client:this.client,wallet:e.wallet,chain:e.chain})}}async connect(e){const t=e.strategy;switch(t){case"auth_endpoint":case"jwt":{const i=await this.authenticate(e);return await this.loginWithAuthToken(i,e.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{const i=await this.passkeyAuth(e);return this.loginWithAuthToken(i)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{const i=await this.authenticate(e);return await this.auth.loginWithAuthToken(i)}default:Ge(t)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){const{PasskeyWebClient:t}=await x(async()=>{const{PasskeyWebClient:r}=await import("./passkeys-DIaFVfE5.js");return{PasskeyWebClient:r}},[]),{passkeyName:i,storeLastUsedPasskey:s=!0}=e,o=new t,a=this.storage;return e.type==="sign-up"?be({client:this.client,ecosystem:this.ecosystem,username:i,passkeyClient:o,storage:s?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}}):Ie({client:this.client,ecosystem:this.ecosystem,passkeyClient:o,storage:s?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}})}async linkProfile(e){const{storedToken:t}=await this.authenticate(e);return await me({client:e.client,tokenToLink:t.cookieString,storage:this.storage,ecosystem:e.ecosystem||this.ecosystem})}async unlinkProfile(e){return await fe({client:this.client,storage:this.storage,ecosystem:this.ecosystem,profileToUnlink:e})}async getProfiles(){return ye({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}function Ge(n,e){throw new Error(`Invalid param: ${n}`)}function xe(){return typeof window<"u"&&window.localStorage?W:oe}export{Ye as InAppWebConnector};
