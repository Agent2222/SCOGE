const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/eth_getTransactionCount-BnBGT2o8.js","assets/main-CjiS4ifE.js","assets/wScoge-BthgsBuw.js","assets/wScoge-CUf-lIoi.css","assets/main-CU5_KOYG.css"])))=>i.map(i=>d[i]);
import{by as d,bz as h,bh as w,bm as b,bq as M,bA as Y,bB as E,bj as L,bw as G,bC as S,bc as z,bD as X,bE as P,bF as $,bG as Z}from"./main-CjiS4ifE.js";import{a as ee}from"./types-DlKe2M91.js";import{r as te,e as x}from"./random-Db2hH_qc.js";import{s as I}from"./sleep-mAKpSMLY.js";import"./wScoge-BthgsBuw.js";const ie="/sdk/2022-08-12/embedded-wallet",k=i=>`thirdwebEwsWalletUserId-${i}`,ne="walletToken",v=i=>`${ne}-${i}`,j=i=>`passkey-credential-id-${i}`,ae="a",A=(i,e)=>`${ae}-${i}-${e}`,D=i=>`walletConnectSessions-${i}`,U=i=>`thirdweb_guest_session_id_${i}`,F=new Map;class W{constructor({storage:e,clientId:t,ecosystem:n}){Object.defineProperty(this,"key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.storage=e,this.key=re(t,n==null?void 0:n.id),this.ecosystem=n}async getItem(e){return this.storage?this.storage.getItem(e):F.get(e)??null}async setItem(e,t){if(this.storage)return this.storage.setItem(e,t);F.set(e,t)}async removeItem(e){const t=await this.getItem(e);return this.storage&&t?(this.storage.removeItem(e),!0):!1}async getWalletConnectSessions(){return this.getItem(D(this.key))}async saveWalletConnectSessions(e){await this.setItem(D(this.key),e)}async savePasskeyCredentialId(e){await this.setItem(j(this.key),e)}async getPasskeyCredentialId(){return this.getItem(j(this.key))}async saveAuthCookie(e){await this.setItem(v(this.key),e)}async getAuthCookie(){return this.getItem(v(this.key))}async removeAuthCookie(){return this.removeItem(v(this.key))}async saveDeviceShare(e,t){await this.saveWalletUserId(t),await this.setItem(A(this.key,t),e)}async getDeviceShare(){const e=await this.getWalletUserId();return e?this.getItem(A(this.key,e)):null}async removeDeviceShare(){const e=await this.getWalletUserId();return e?this.removeItem(A(this.key,e)):!1}async getWalletUserId(){return this.getItem(k(this.key))}async saveWalletUserId(e){await this.setItem(k(this.key),e)}async removeWalletUserId(){return this.removeItem(k(this.key))}async getGuestSessionId(){return this.getItem(U(this.key))}async saveGuestSessionId(e){await this.setItem(U(this.key),e)}}const re=(i,e)=>`${i}${e?`-${e}`:""}`;async function O({authToken:i,client:e,ecosystem:t}){const r=await d(e,t)(`${h("inAppWallet")}/api/2024-05-05/accounts`,{method:"GET",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${i}`}});if(!r.ok){if(r.status===401)return;const o=await r.json();throw new Error(`Failed to get user status: ${o.message}`)}return await r.json()}const se=h("inAppWallet"),oe=`${se}/`,q=`${oe}api/2023-10-20`,ce=`${q}/embedded-wallet/validate-custom-jwt`,le=`${q}/embedded-wallet/validate-custom-auth-endpoint`,H=(i,e)=>e instanceof Error?`${i}: ${e.message}`:`${i}: ${w(e)}`;async function ue(i){const t=await d(i.client,i.ecosystem)(le,{method:"POST",headers:{"Content-Type":"application/json"},body:w({payload:i.payload,developerClientId:i.client.clientId})});if(!t.ok){const n=await t.json();throw new Error(`Custom auth endpoint authentication error: ${n.message}`)}try{const{verifiedToken:n}=await t.json();return{storedToken:n}}catch(n){throw new Error(H("Malformed response from post auth_endpoint authentication",n))}}const Q=i=>{if(!ee.includes(i))throw new Error(`Unknown auth option ${i}`);switch(i){case"wallet":return"siwe";default:return i}},y=({authOption:i,client:e,ecosystem:t,mode:n="popup",redirectUrl:r})=>{if(n==="popup"&&r)throw new Error("Redirect URL is not supported for popup mode");if(n==="window"&&!r)throw new Error("Redirect URL is required for window mode");const o=Q(i);let a=`${h("inAppWallet")}/api/2024-05-05/login/${o}?clientId=${e.clientId}`;if(t!=null&&t.partnerId?a=`${a}&ecosystemId=${t.id}&ecosystemPartnerId=${t.partnerId}`:t&&(a=`${a}&ecosystemId=${t.id}`),n!=="popup"){const s=new URL(r||window.location.href);s.searchParams.set("walletId",(t==null?void 0:t.id)||"inApp"),s.searchParams.set("authProvider",i),a=`${a}&redirectUrl=${encodeURIComponent(s.toString())}`}return a},C=({authOption:i,client:e,ecosystem:t})=>{const n=Q(i);let r=`${h("inAppWallet")}/api/2024-05-05/login/${n}/callback?clientId=${e.clientId}`;return t!=null&&t.partnerId?r=`${r}&ecosystemId=${t.id}&ecosystemPartnerId=${t.partnerId}`:t&&(r=`${r}&ecosystemId=${t.id}`),r};async function de(i){const e=d(i.client,i.ecosystem),t=y({authOption:"backend",client:i.client,ecosystem:i.ecosystem}),n=await e(`${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({walletSecret:i.walletSecret})});if(!n.ok)throw new Error("Failed to generate backend account");return await n.json()}async function he(i){const e=new W({storage:i.storage,clientId:i.client.clientId,ecosystem:i.ecosystem});let t=await e.getGuestSessionId();t||(t=te(32),e.saveGuestSessionId(t));const n=d(i.client,i.ecosystem),r=C({authOption:"guest",client:i.client,ecosystem:i.ecosystem}),o=await n(`${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({sessionId:t})});if(!o.ok)throw new Error("Failed to generate guest account");return await o.json()}async function we(i){const t=await d(i.client,i.ecosystem)(ce,{method:"POST",headers:{"Content-Type":"application/json"},body:w({jwt:i.jwt,developerClientId:i.client.clientId})});if(!t.ok){const n=await t.json();throw new Error(`JWT authentication error: ${n.message}`)}try{const{verifiedToken:n}=await t.json();return{storedToken:n}}catch(n){throw new Error(H("Malformed response from post jwt authentication",n))}}async function ge({client:i,ecosystem:e,tokenToLink:t,storage:n}){const r=d(i,e),o=h("inAppWallet"),a=await n.getAuthCookie();if(!a)throw new Error("Failed to link account, no user logged in");const s={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},l=await r(`${o}/api/2024-05-05/account/connect`,{method:"POST",headers:s,body:w({accountAuthTokenToConnect:t})});if(!l.ok){const u=await l.json();throw new Error(u.message||"Failed to link account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function pe({client:i,ecosystem:e,profileToUnlink:t,storage:n}){const r=d(i,e),o=h("inAppWallet"),a=await n.getAuthCookie();if(!a)throw new Error("Failed to unlink account, no user logged in");const s={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},l=await r(`${o}/api/2024-05-05/account/disconnect`,{method:"POST",headers:s,body:w(t)});if(!l.ok){const u=await l.json();throw new Error(u.message||"Failed to unlink account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function me({client:i,ecosystem:e,storage:t}){const n=d(i,e),r=h("inAppWallet"),o=await t.getAuthCookie();if(!o)throw new Error("Failed to get linked accounts, no user logged in");const a={Authorization:`Bearer iaw-auth-token:${o}`,"Content-Type":"application/json"},s=await n(`${r}/api/2024-05-05/accounts`,{method:"GET",headers:a});if(!s.ok){const c=await s.json();throw new Error(c.message||"Failed to get linked accounts.")}const{linkedAccounts:l}=await s.json();return l??[]}function V(){return`${h("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function J(i,e){return`${h("inAppWallet")}/api/2024-05-05/login/passkey?type=${i}${e?`&username=${e}`:""}`}async function fe(i){var u,g,p;if(!i.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=d(i.client,i.ecosystem),t=i.username??be(i.ecosystem),r=await(await e(J("sign-up",t))).json();if(!r.challenge)throw new Error("No challenge received");const o=r.challenge,a=await i.passkeyClient.register({name:t,challenge:o,rp:i.rp}),s={};(u=i.ecosystem)!=null&&u.partnerId&&(s["x-ecosystem-partner-id"]=i.ecosystem.partnerId),(g=i.ecosystem)!=null&&g.id&&(s["x-ecosystem-id"]=i.ecosystem.id);const c=await(await e(V(),{method:"POST",headers:{"Content-Type":"application/json",...s},body:w({type:"sign-up",authenticatorData:a.authenticatorData,credentialId:a.credentialId,serverVerificationId:r.serverVerificationId,clientData:a.clientData,username:t,credential:{publicKey:a.credential.publicKey,algorithm:a.credential.algorithm},origin:a.origin,rpId:i.rp.id})})).json();if(!c||!c.storedToken)throw new Error(`Error verifying passkey: ${c.message??"unknown error"}`);return await((p=i.storage)==null?void 0:p.savePasskeyCredentialId(a.credentialId)),c}async function ye(i){var c,u,g,p;if(!i.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=d(i.client,i.ecosystem),[t,n]=await Promise.all([e(J("sign-in")).then(f=>f.json()),(c=i.storage)==null?void 0:c.getPasskeyCredentialId()]);if(!t.challenge)throw new Error("No challenge received");const r=t.challenge,o=await i.passkeyClient.authenticate({credentialId:n??void 0,challenge:r,rp:i.rp}),a={};(u=i.ecosystem)!=null&&u.partnerId&&(a["x-ecosystem-partner-id"]=i.ecosystem.partnerId),(g=i.ecosystem)!=null&&g.id&&(a["x-ecosystem-id"]=i.ecosystem.id);const l=await(await e(V(),{method:"POST",headers:{"Content-Type":"application/json",...a},body:w({type:"sign-in",authenticatorData:o.authenticatorData,credentialId:o.credentialId,serverVerificationId:t.serverVerificationId,clientData:o.clientData,signature:o.signature,origin:o.origin,rpId:i.rp.id})})).json();if(!l||!l.storedToken)throw new Error(`Error verifying passkey: ${l.message??"unknown error"}`);return await((p=i.storage)==null?void 0:p.savePasskeyCredentialId(o.credentialId)),l}function be(i){return`${(i==null?void 0:i.id)??"wallet"}-${new Date().toISOString()}`}function Ie(i){let n=[`${i.domain} wants you to sign in with your Ethereum account:`,i.address].join(`
`);n=[n,i.statement].join(`

`),i.statement&&(n+=`
`);const r=[];if(i.uri){const u=`URI: ${i.uri}`;r.push(u)}const o=`Version: ${i.version}`;if(r.push(o),i.chain_id){const u=`Chain ID: ${i.chain_id}`||"1";r.push(u)}const a=`Nonce: ${i.nonce}`;r.push(a);const s=`Issued At: ${i.issued_at}`;r.push(s);const l=`Expiration Time: ${i.expiration_time}`;if(r.push(l),i.invalid_before){const u=`Not Before: ${i.invalid_before}`;r.push(u)}i.resources&&r.push(["Resources:",...i.resources.map(u=>`- ${u}`)].join(`
`));const c=r.join(`
`);return[n,c].join(`
`)}async function ke(i){const{payload:e,account:t}=i;return{signature:await t.signMessage({message:Ie(e)}),payload:e}}async function ve(i){const{wallet:e,chain:t,client:n,ecosystem:r}=i,o=e.getAccount()||await e.connect({client:n,chain:t}),a=d(n,r),s=await(async()=>{const u=y({authOption:"wallet",client:i.client,ecosystem:i.ecosystem}),g=await a(`${u}&address=${o.address}&chainId=${t.id}`);if(!g.ok)throw new Error("Failed to generate SIWE login payload");return await g.json()})(),{signature:l}=await ke({payload:s,account:o});return await(async()=>{const u=C({authOption:"wallet",client:i.client,ecosystem:i.ecosystem}),g=await a(`${u}&signature=${l}&payload=${encodeURIComponent(s)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:w({signature:l,payload:s})});if(!g.ok)throw new Error("Failed to verify SIWE signature");return await g.json()})()}async function Ae({client:i,payload:{message:e,isRaw:t,originalMessage:n,chainId:r},storage:o}){const a=await o.getAuthCookie(),s=o.ecosystem,l=d(i,s);if(!a)throw new Error("No auth token found when signing message");const c=await l(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${a}`},body:w({messagePayload:{message:e,isRaw:t,originalMessage:n,chainId:r}})});if(!c.ok)throw new Error(`Failed to sign message - ${c.status} ${c.statusText}`);return await c.json()}async function Te({client:i,payload:e,storage:t}){const n=await t.getAuthCookie(),r=t.ecosystem,o=d(i,r);if(!n)throw new Error("No auth token found when signing transaction");const a=await o(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:w({transactionPayload:e})});if(!a.ok)throw new Error(`Failed to sign transaction - ${a.status} ${a.statusText}`);return(await a.json()).signature}async function Ee({client:i,payload:e,storage:t}){const n=await t.getAuthCookie(),r=t.ecosystem,o=d(i,r);if(!n)throw new Error("No auth token found when signing typed data");const a=await o(`${h("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:w({...e})});if(!a.ok)throw new Error(`Failed to sign typed data - ${a.status} ${a.statusText}`);return await a.json()}class Le{constructor({client:e,ecosystem:t,address:n,storage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.address=n,this.localStorage=r}async postWalletSetUp(e){await this.localStorage.saveAuthCookie(e.storedToken.cookieString)}async getUserWalletStatus(){var o,a;const e=await this.localStorage.getAuthCookie();if(!e)return{status:"Logged Out"};const t=await O({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!t)return{status:"Logged Out"};const n=t.wallets[0],r={email:(o=t.linkedAccounts.find(s=>s.details.email!==void 0))==null?void 0:o.details.email,phoneNumber:(a=t.linkedAccounts.find(s=>s.details.phone!==void 0))==null?void 0:a.details.phone,userWalletId:t.id||"",recoveryShareManagement:"ENCLAVE"};return n?{status:"Logged In, Wallet Initialized",walletAddress:n.address,authDetails:r,account:await this.getAccount()}:{status:"Logged In, Wallet Uninitialized",authDetails:r}}async getAccount(){const e=this.client,t=this.localStorage,n=this.address,r=this.ecosystem,o=async a=>{const s=E({client:e,chain:L(a.chainId)}),l={to:a.to?b(a.to):void 0,data:a.data,value:m(a.value),gas:m(a.gas),nonce:m(a.nonce)||S(await z(async()=>{const{eth_getTransactionCount:c}=await import("./eth_getTransactionCount-BnBGT2o8.js");return{eth_getTransactionCount:c}},__vite__mapDeps([0,1,2,3,4])).then(({eth_getTransactionCount:c})=>c(s,{address:b(this.address),blockTag:"pending"}))),chainId:S(a.chainId)};return m(a.maxFeePerGas)?(l.maxFeePerGas=m(a.maxFeePerGas),l.maxPriorityFeePerGas=m(a.maxPriorityFeePerGas),l.type=2):(l.gasPrice=m(a.gasPrice),l.type=0),Te({client:e,storage:t,payload:l})};return{address:b(n),async signTransaction(a){if(!a.chainId)throw new Error("chainId required in tx to sign");return o({chainId:a.chainId,...a})},async sendTransaction(a){const s=E({client:e,chain:L(a.chainId)}),l=await o(a),c=await x(s,l);return G({client:e,ecosystem:r,chainId:a.chainId,walletAddress:n,walletType:"inApp",transactionHash:c,contractAddress:a.to??void 0,gasPrice:a.gasPrice}),{transactionHash:c}},async signMessage({message:a,originalMessage:s,chainId:l}){const c=typeof a=="string"?{message:a,isRaw:!1,originalMessage:s,chainId:l}:{message:typeof a.raw=="string"?a.raw:Y(a.raw),isRaw:!0,originalMessage:s,chainId:l},{signature:u}=await Ae({client:e,payload:c,storage:t});return u},async signTypedData(a){const s=M(a),{signature:l}=await Ee({client:e,payload:s,storage:t});return l}}}}function m(i){return i===void 0||X(i)?i:S(i)}const Se={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none",pointerEvents:"all"},T=new Map;class Pe{constructor({link:e,baseUrl:t,iframeId:n,container:r,onIframeInitialize:o,localStorage:a,clientId:s,ecosystem:l}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=a,this.clientId=s,this.ecosystem=l,this.iframeBaseUrl=t,typeof document>"u")return;r=r??document.body;let c=document.getElementById(n);const u=new URL(e);if(!c||c.src!==u.href){c=document.createElement("iframe");const g={...Se};Object.assign(c.style,g),c.setAttribute("id",n),c.setAttribute("fetchpriority","high"),r.appendChild(c),c.src=u.href;const p=f=>{if(f.data.eventType==="ewsIframeLoaded"){if(window.removeEventListener("message",p),!c){console.warn("thirdweb iFrame not found");return}this.onIframeLoadHandler(c,o)()}};window.addEventListener("message",p)}this.iframe=c}async onIframeLoadedInitVariables(){var e,t;return{authCookie:await this.localStorage.getAuthCookie(),deviceShareStored:await this.localStorage.getDeviceShare(),walletUserId:await this.localStorage.getWalletUserId(),clientId:this.clientId,partnerId:(e=this.ecosystem)==null?void 0:e.partnerId,ecosystemId:(t=this.ecosystem)==null?void 0:t.id}}onIframeLoadHandler(e,t){return async()=>{var o;const n=new MessageChannel,r=new Promise((a,s)=>{n.port1.onmessage=l=>{const{data:c}=l;n.port1.close(),c.success||s(new Error(c.error)),T.set(e.src,!0),t&&t(),a(!0)}});(o=e==null?void 0:e.contentWindow)==null||o.postMessage({eventType:"initIframe",data:await this.onIframeLoadedInitVariables()},this.iframeBaseUrl,[n.port2]),await r}}async call({procedureName:e,params:t,showIframe:n=!1}){var a;if(!this.iframe)throw new Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!T.get(this.iframe.src);)await I(this.POLLING_INTERVAL_SECONDS*1e3);n&&(this.iframe.style.display="block",await I(.005*1e3));const r=new MessageChannel,o=new Promise((s,l)=>{r.port1.onmessage=async c=>{const{data:u}=c;r.port1.close(),n&&(await I(.1*1e3),this.iframe&&(this.iframe.style.display="none")),u.success?s(u.data):l(new Error(u.error))}});return(a=this.iframe.contentWindow)==null||a.postMessage({eventType:e,data:{...t,...await this.onIframeLoadedInitVariables()}},this.iframeBaseUrl,[r.port2]),o}destroy(){this.iframe&&T.delete(this.iframe.src)}}class We extends Pe{constructor({clientId:e,baseUrl:t,ecosystem:n}){super({iframeId:Ce+((n==null?void 0:n.id)||""),link:Oe({clientId:e,path:ie,ecosystem:n,baseUrl:t}).href,baseUrl:t,container:typeof document>"u"?void 0:document.body,localStorage:new W({storage:P,clientId:e,ecosystem:n}),clientId:e,ecosystem:n}),this.clientId=e,this.ecosystem=n}}function Oe({clientId:i,baseUrl:e,path:t,ecosystem:n,queryParams:r}){var a;const o=new URL(`${t}`,e);if(r)for(const s of Object.keys(r))o.searchParams.set(s,((a=r[s])==null?void 0:a.toString())||"");return o.searchParams.set("clientId",i),(n==null?void 0:n.partnerId)!==void 0&&o.searchParams.set("partnerId",n.partnerId),(n==null?void 0:n.id)!==void 0&&o.searchParams.set("ecosystemId",n.id),o}const Ce="thirdweb-in-app-wallet-iframe";async function _e({client:i,ecosystem:e,authToken:t}){const r=await d(i,e)(`${h("inAppWallet")}/api/v1/enclave-wallet/generate`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${t}`}});if(!r.ok)throw new Error(`Failed to generate wallet - ${r.status} ${r.statusText}`);const{wallet:o}=await r.json();return o}class $e{constructor({baseUrl:e,querier:t,preLogin:n,postLogin:r,client:o,ecosystem:a}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=e,this.LoginQuerier=t,this.preLogin=n,this.postLogin=r,this.client=o,this.ecosystem=a}async sendEmailLoginOtp({email:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebEmailLoginOtp",params:{email:e}})}async sendSmsLoginOtp({phoneNumber:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebSmsLoginOtp",params:{phoneNumber:e}})}}class je extends $e{async authenticateWithModal(){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:void 0,showIframe:!0})}async loginWithModal(){await this.preLogin();const e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe({email:e}){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:{email:e},showIframe:!0})}async loginWithIframe({email:e}){await this.preLogin();const t=await this.authenticateWithIframe({email:e});return this.postLogin(t)}async authenticateWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({procedureName:"loginWithCustomJwt",params:{encryptionKey:e,jwt:t}})}async loginWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");await this.preLogin();const n=await this.authenticateWithCustomJwt({encryptionKey:e,jwt:t});return this.postLogin(n)}async authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t}){return this.LoginQuerier.call({procedureName:"loginWithCustomAuthEndpoint",params:{encryptionKey:e,payload:t}})}async loginWithCustomAuthEndpoint({encryptionKey:e,payload:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom auth");await this.preLogin();const n=await this.authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t});return this.postLogin(n)}async authenticateWithEmailOtp({email:e,otp:t,recoveryCode:n}){return this.LoginQuerier.call({procedureName:"verifyThirdwebEmailLoginOtp",params:{email:e,otp:t,recoveryCode:n}})}async loginWithEmailOtp({email:e,otp:t,recoveryCode:n}){const r=await this.authenticateWithEmailOtp({email:e,otp:t,recoveryCode:n});return this.postLogin(r)}async authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:n}){return this.LoginQuerier.call({procedureName:"verifyThirdwebSmsLoginOtp",params:{phoneNumber:e,otp:t,recoveryCode:n}})}async loginWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:n}){const r=await this.authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:n});return this.postLogin(r)}}class De{constructor({client:e,querier:t,onAuthSuccess:n,ecosystem:r,baseUrl:o,localStorage:a}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=r,this.AuthQuerier=t,this.localStorage=a,this.onAuthSuccess=n,this.BaseLogin=new je({postLogin:async s=>this.postLogin(s),preLogin:async()=>{await this.preLogin()},ecosystem:r,querier:t,client:e,baseUrl:o})}async preLogin(){await this.logout()}async postLogin({storedToken:e,walletDetails:t}){return e.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(e.cookieString),await this.onAuthSuccess({storedToken:e,walletDetails:t})}async loginWithAuthToken(e,t){var o;e.storedToken.authProvider!=="Backend"&&await this.preLogin();const n=await O({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!n)throw new Error("Cannot login, no user found for auth token");if(n.wallets.length>0&&((o=n.wallets[0])==null?void 0:o.type)==="enclave")return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:n.wallets[0].address}});if(n.wallets.length===0){const a=await _e({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.address}})}const r=await this.AuthQuerier.call({procedureName:"loginWithStoredTokenDetails",params:{storedToken:e.storedToken,recoveryCode:t}});return this.postLogin(r)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp({email:e}){return this.BaseLogin.sendEmailLoginOtp({email:e})}async sendSmsLoginOtp({phoneNumber:e}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:e})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){const e=await this.localStorage.removeAuthCookie(),t=await this.localStorage.removeWalletUserId();return{success:e||t}}}const Ue="width=350, height=500",N=({isWindowOpenedByFn:i,win:e,closeOpenedWindow:t})=>{i?e==null||e.close():e&&t?t(e):e&&e.close()};async function Fe(i){const e=y({...i,mode:i.mode||"redirect"});i.mode==="redirect"?window.location.href=e:window.open(e),await new Promise(t=>setTimeout(t,5e3))}const Ne=async i=>{let e=i.openedWindow,t=!1;if(e||(e=window.open(y({...i,mode:"popup"}),`Login to ${i.authOption}`,Ue),t=!0),!e)throw new Error("Something went wrong opening pop-up");return await new Promise((r,o)=>{const a=window.setInterval(async()=>{e.closed&&(clearInterval(a),window.removeEventListener("message",s),o(new Error("User closed login window")))},1e3),s=async l=>{if(l.origin===h("inAppWallet")){if(typeof l.data!="object"){o(new Error("Invalid event data"));return}switch(l.data.eventType){case"oauthSuccessResult":{window.removeEventListener("message",s),clearInterval(a),N({isWindowOpenedByFn:t,win:e,closeOpenedWindow:i.closeOpenedWindow}),l.data.authResult&&r(l.data.authResult);break}case"oauthFailureResult":{window.removeEventListener("message",s),clearInterval(a),N({isWindowOpenedByFn:t,win:e,closeOpenedWindow:i.closeOpenedWindow}),o(new Error(l.data.errorString));break}}}};window.addEventListener("message",s)})},Re=async i=>{const{client:e,ecosystem:t}=i,n=y({client:e,ecosystem:t,authOption:i.strategy}),r={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(r["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(r["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(i.strategy){case"email":return{email:i.email};case"phone":return{phone:i.phoneNumber}}})(),a=await fetch(n,{method:"POST",headers:r,body:w(o)});if(!a.ok)throw new Error("Failed to send verification code");return await a.json()},R=async i=>{const{client:e,ecosystem:t}=i,n=C({authOption:i.strategy,client:i.client,ecosystem:i.ecosystem}),r={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(r["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(r["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(i.strategy){case"email":return{email:i.email,code:i.verificationCode};case"phone":return{phone:i.phoneNumber,code:i.verificationCode}}})(),a=await fetch(n,{method:"POST",headers:r,body:w(o)});if(!a.ok)throw new Error("Failed to verify verification code");return await a.json()};class B{constructor({client:e,ecosystem:t,querier:n,localStorage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.walletManagerQuerier=n,this.localStorage=r}async postWalletSetUp(e){e.deviceShareStored&&await this.localStorage.saveDeviceShare(e.deviceShareStored,e.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){const e=await this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return e.status==="Logged In, Wallet Initialized"?{status:"Logged In, Wallet Initialized",...e.user,account:await this.getAccount()}:e.status==="Logged In, New Device"?{status:"Logged In, New Device",...e.user}:e.status==="Logged In, Wallet Uninitialized"?{status:"Logged In, Wallet Uninitialized",...e.user}:{status:e.status}}async getAccount(){var a;const e=this.walletManagerQuerier,t=this.client,n=(a=this.ecosystem)==null?void 0:a.partnerId,{address:r}=await e.call({procedureName:"getAddress",params:void 0}),o=async s=>{const l={to:s.to??void 0,data:s.data,value:s.value,gasLimit:s.gas,nonce:s.nonce,chainId:s.chainId};s.maxFeePerGas?(l.accessList=s.accessList,l.maxFeePerGas=s.maxFeePerGas,l.maxPriorityFeePerGas=s.maxPriorityFeePerGas,l.type=2):(l.gasPrice=s.gasPrice,l.type=0);const c=$().rpc,{signedTransaction:u}=await e.call({procedureName:"signTransaction",params:{transaction:l,chainId:s.chainId,partnerId:n,rpcEndpoint:`https://${s.chainId}.${c}`}});return u};return{address:b(r),async signTransaction(s){if(!s.chainId)throw new Error("chainId required in tx to sign");return o({...s,chainId:s.chainId})},async sendTransaction(s){const l=E({client:t,chain:L(s.chainId)}),c=await o(s),u=await x(l,c);return G({client:t,chainId:s.chainId,walletAddress:r,walletType:"inApp",transactionHash:u,contractAddress:s.to??void 0,gasPrice:s.gasPrice}),{transactionHash:u}},async signMessage({message:s}){const l=typeof s=="string"?s:s.raw instanceof Uint8Array?s.raw:Z(s.raw),{signedMessage:c}=await e.call({procedureName:"signMessage",params:{message:l,partnerId:n,chainId:1}});return c},async signTypedData(s){var _;const l=M(s);(_=l.types)!=null&&_.EIP712Domain&&(l.types.EIP712Domain=void 0);const c=l.domain,u=c==null?void 0:c.chainId,p={...c!=null&&c.verifyingContract?{verifyingContract:c==null?void 0:c.verifyingContract}:{},name:c==null?void 0:c.name,version:c==null?void 0:c.version};u&&(p.chainId=u);const f=$().rpc,{signedTypedData:K}=await e.call({procedureName:"signTypedDataV4",params:{domain:p,types:l.types,message:l.message,chainId:Number.parseInt(BigInt(u||1).toString()),partnerId:n,rpcEndpoint:`https://${u}.${f}`}});return K}}}}class He{isClientIdLegacyPaper(e){return e.indexOf("-")>0&&e.length===36}constructor({client:e,onAuthSuccess:t,ecosystem:n,passkeyDomain:r,storage:o}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(e.clientId))throw new Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");const a=h("inAppWallet");this.client=e,this.ecosystem=n,this.passkeyDomain=r,this.storage=new W({storage:o??P,clientId:e.clientId,ecosystem:n}),this.querier=new We({clientId:e.clientId,ecosystem:n,baseUrl:a}),this.auth=new De({client:e,querier:this.querier,baseUrl:a,localStorage:this.storage,ecosystem:n,onAuthSuccess:async s=>{if(t==null||t(s),s.storedToken.authDetails.walletType==="sharded"&&(await this.querier.call({procedureName:"migrateFromShardToEnclave",params:{storedToken:s.storedToken}})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(s.storedToken.cookieString),!this.wallet)throw new Error("Failed to initialize wallet");const l="deviceShareStored"in s.walletDetails?s.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({storedToken:s.storedToken,deviceShareStored:l}),this.wallet instanceof B&&await this.querier.call({procedureName:"initIframe",params:{partnerId:n==null?void 0:n.partnerId,ecosystemId:n==null?void 0:n.id,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in s.walletDetails?s.walletDetails.deviceShareStored:null,walletUserId:s.storedToken.authDetails.userWalletId,authCookie:s.storedToken.cookieString}}),{user:{status:"Logged In, Wallet Initialized",authDetails:s.storedToken.authDetails,account:await this.wallet.getAccount(),walletAddress:s.walletDetails.walletAddress}}}})}async initializeWallet(e){var r;const t=await this.storage.getAuthCookie();if(!e&&t===null)throw new Error("No auth token provided and no stored auth token found to initialize the wallet");const n=await O({authToken:e||t,client:this.client,ecosystem:this.ecosystem});if(!n)throw new Error("Cannot initialize wallet, no user logged in");if(n.wallets.length===0)throw new Error("Cannot initialize wallet, this user does not have a wallet generated yet");return((r=n.wallets[0])==null?void 0:r.type)==="enclave"?new Le({client:this.client,ecosystem:this.ecosystem,address:n.wallets[0].address,storage:this.storage}):new B({client:this.client,ecosystem:this.ecosystem,querier:this.querier,localStorage:this.storage})}async getUser(){if(!this.wallet){const e=await this.storage.getAuthCookie();if(!e)return{status:"Logged Out"};this.wallet=await this.initializeWallet(e)}if(!this.wallet)throw new Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw new Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return Re({...e,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(e,t,n){return Fe({authOption:e,client:this.client,ecosystem:this.ecosystem,redirectUrl:n,mode:t})}async loginWithAuthToken(e,t){return this.auth.loginWithAuthToken(e,t)}async authenticate(e){const t=e.strategy;switch(t){case"email":return R({...e,client:this.client,ecosystem:this.ecosystem});case"phone":return R({...e,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return ue({payload:e.payload,client:this.client,ecosystem:this.ecosystem});case"jwt":return we({jwt:e.jwt,client:this.client,ecosystem:this.ecosystem});case"passkey":return this.passkeyAuth(e);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"steam":case"coinbase":case"discord":return Ne({authOption:t,client:this.client,ecosystem:this.ecosystem,closeOpenedWindow:e.closeOpenedWindow,openedWindow:e.openedWindow});case"guest":return he({client:this.client,ecosystem:this.ecosystem,storage:P});case"backend":return de({client:this.client,walletSecret:e.walletSecret,ecosystem:this.ecosystem});case"wallet":return ve({ecosystem:this.ecosystem,client:this.client,wallet:e.wallet,chain:e.chain})}}async connect(e){const t=e.strategy;switch(t){case"auth_endpoint":case"jwt":{const n=await this.authenticate(e);return await this.loginWithAuthToken(n,e.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{const n=await this.passkeyAuth(e);return this.loginWithAuthToken(n)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{const n=await this.authenticate(e);return await this.auth.loginWithAuthToken(n)}default:Be(t)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){const{PasskeyWebClient:t}=await z(async()=>{const{PasskeyWebClient:s}=await import("./passkeys-J2MJ65ss.js");return{PasskeyWebClient:s}},[]),{passkeyName:n,storeLastUsedPasskey:r=!0}=e,o=new t,a=this.storage;return e.type==="sign-up"?fe({client:this.client,ecosystem:this.ecosystem,username:n,passkeyClient:o,storage:r?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}}):ye({client:this.client,ecosystem:this.ecosystem,passkeyClient:o,storage:r?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}})}async linkProfile(e){const{storedToken:t}=await this.authenticate(e);return await ge({client:e.client,tokenToLink:t.cookieString,storage:this.storage,ecosystem:e.ecosystem||this.ecosystem})}async unlinkProfile(e){return await pe({client:this.client,storage:this.storage,ecosystem:this.ecosystem,profileToUnlink:e})}async getProfiles(){return me({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}function Be(i,e){throw new Error(`Invalid param: ${i}`)}export{He as InAppWebConnector};
